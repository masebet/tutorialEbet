youtube.com/watch?v=0KGMFhFQ0YY&list=LL&index=3&ab_channel=VolosProjects
https://ezgif.com/resize
https://ezgif.com/split/
https://iconarchive.com/news.html
https://icons8.com/animated-icons
https://www.instructables.com/Running-Animations-on-OLED-DISPLAY-SSD1306/
https://manytools.org/hacker-tools/image-to-byte-array/go/
https://javl.github.io/image2cpp/    => sesuaikan dimensi bitmapnya



#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16

static const unsigned char PROGMEM logo_bmp[] =
{ B00000000, B11000000,
  B00000001, B11000000,
  B00000001, B11000000,
  B00000011, B11100000,
  B11110011, B11100000,
  B11111110, B11111000,
  B01111110, B11111111,
  B00110011, B10011111,
  B00011111, B11111100,
  B00001101, B01110000,
  B00011011, B10100000,
  B00111111, B11100000,
  B00111111, B11110000,
  B01111100, B11110000,
  B01110000, B01110000,
  B00000000, B00110000 };
  
  
  /**************************************************************************

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);



#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16

static const unsigned char PROGMEM logo_bmp[] =
{ B00000000, B11000000,
  B00000001, B11000000,
  B00000001, B11000000,
  B00000011, B11100000,
  B11110011, B11100000,
  B11111110, B11111000,
  B01111110, B11111111,
  B00110011, B10011111,
  B00011111, B11111100,
  B00001101, B01110000,
  B00011011, B10100000,
  B00111111, B11100000,
  B00111111, B11110000,
  B01111100, B11110000,
  B01110000, B01110000,
  B00000000, B00110000 };


  static const unsigned char PROGMEM kacamata[] =
{ 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0xe0, 0x07, 0x80, 0x01, 0xe0, 
0x0c, 0x80, 0x01, 0x30, 0x08, 0x00, 0x00, 0x10, 0x18, 0x00, 0x00, 0x18, 0x10, 0x00, 0x00, 0x08, 
0x10, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x0c, 0x20, 0x00, 0x00, 0x04, 0x60, 0x00, 0x00, 0x06, 
0x40, 0x00, 0x00, 0x02, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x06, 0x60, 0x03, 0x40, 0x06, 0x60, 0x02, 
0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x60, 0x06, 0x20, 0x04, 0x20, 0x04, 0x30, 0x04, 0x20, 0x0c, 
0x18, 0x0c, 0x30, 0x18, 0x0e, 0x38, 0x1c, 0x70, 0x03, 0xe0, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

  static const unsigned char PROGMEM logo_bmp2[] =
{ 
0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x8c, 0x00, 0x01, 0xc1, 0xc6, 0x00, 0x01, 0xe0, 0xe3, 0x00, 
0x18, 0xf0, 0x31, 0x80, 0x3c, 0x78, 0x19, 0x80, 0x1e, 0x7c, 0x1c, 0x80, 0x0f, 0x3f, 0x0c, 0x00, 
0x47, 0x9f, 0x86, 0x06, 0xe3, 0xcf, 0xc0, 0x0f, 0xf9, 0xf7, 0xe0, 0x1f, 0x7c, 0xff, 0xf0, 0x3e, 
0x3e, 0x7f, 0xf8, 0x7e, 0x1f, 0x3f, 0xff, 0xfc, 0x67, 0xff, 0xff, 0xf8, 0xf3, 0xff, 0xff, 0xf8, 
0x79, 0xff, 0xff, 0xf0, 0x3d, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xe0, 
0x07, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0x80, 
0x30, 0x7f, 0xff, 0x00, 0x38, 0x1f, 0xfc, 0x00, 0x1c, 0x0f, 0xf8, 0x00, 0x07, 0x03, 0xf0, 0x00, 
0x03, 0x80, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00
};

  static const unsigned char PROGMEM merpati[] =
{
0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x30, 0x00, 0x19, 0x00, 0x78, 
0x00, 0x11, 0x80, 0x48, 0x00, 0x11, 0x80, 0xc8, 0x00, 0x30, 0x81, 0x88, 0x00, 0x60, 0x83, 0x0c, 
0x00, 0x40, 0x86, 0x0c, 0x00, 0xc0, 0x8c, 0x0c, 0x01, 0x80, 0x98, 0x08, 0x03, 0x00, 0xb0, 0x08, 
0x02, 0x01, 0xe0, 0x08, 0x06, 0x01, 0xc0, 0x18, 0x06, 0x01, 0x80, 0x18, 0x02, 0x03, 0x00, 0x10, 
0x07, 0x06, 0x00, 0x30, 0x0f, 0x8c, 0x00, 0x60, 0x18, 0xf8, 0x00, 0xc0, 0x1c, 0x00, 0x01, 0x80, 
0x1e, 0x00, 0x07, 0x00, 0x03, 0x00, 0x7c, 0x00, 0x01, 0x80, 0xe0, 0x00, 0x00, 0xc0, 0xc0, 0x00, 
0x00, 0x60, 0x70, 0x00, 0x00, 0x3c, 0x3f, 0x80, 0x00, 0x04, 0x00, 0xc0, 0x00, 0x06, 0x00, 0x40, 
0x00, 0x02, 0x00, 0x40, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x01, 0xc7, 0x80, 0x00, 0x00, 0x7e, 0x00
};
  static const unsigned char PROGMEM logo_bmp3[] =
{ 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x01, 0xc0, 0x00, 
0x67, 0xff, 0xf0, 0x00, 0x41, 0x9c, 0x1f, 0xfc, 0x41, 0x18, 0x03, 0x84, 0x41, 0x30, 0x81, 0x86, 
0x43, 0x33, 0xe0, 0x82, 0xc3, 0x36, 0x30, 0x82, 0xc2, 0x1c, 0x18, 0xc2, 0xc2, 0x00, 0x0c, 0x43, 
0x86, 0x00, 0x06, 0x43, 0x86, 0x00, 0x23, 0x63, 0xc7, 0x00, 0x31, 0xff, 0xfc, 0xc0, 0x98, 0xff, 
0x00, 0x62, 0xcc, 0x80, 0x00, 0x33, 0x63, 0x80, 0x00, 0x19, 0x9b, 0x00, 0x00, 0x0e, 0xde, 0x00, 
0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

void setup() {

  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
  }
  
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, (32  - 32 ) / 2, logo_bmp2, 32, 32, 1);
  display.display();
  delay(3000);
  
  display.invertDisplay(true);
  delay(2);
  display.invertDisplay(false);

  char message[] = "Hai Feby!!! ";
  int  x, minX;
  display.begin(SSD1306_SWITCHCAPVCC);
  display.setTextSize(4);
  display.setTextColor(WHITE);
  display.setTextWrap(false);
  x    = display.width();
  minX = -12 * strlen(message);
  while(1){
    display.clearDisplay();
    display.setCursor(x, 0);
    display.print(message);
    display.display();
    if(--x < minX) break;
    delay(1);
  }
  
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, 0, logo_bmp3, 32, 32, 1);
  display.display();
  delay(500);
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, 2, logo_bmp3, 32, 32, 1);
  display.display();
  delay(500);
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, 0, logo_bmp3, 32, 32, 1);
  display.display();
  delay(500);
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, 2, logo_bmp3, 32, 32, 1);
  display.display();
  delay(500);
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, 0, logo_bmp3, 32, 32, 1);
  display.display();
  delay(500);
  display.clearDisplay();
  display.drawBitmap( (128  - 32 ) / 2, 2, logo_bmp3, 32, 32, 1);
  display.display();
  delay(500);

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setTextWrap(true);
  display.setCursor(0,0);
  display.println(F(
      "aku Ebet.\n"
      "Boleh kenalan?\n"
      "kamu indah.\n"
      "hobi kamu apa?\n"  
  ));
  display.display();
  display.drawBitmap( 128-32, 0, kacamata, 32, 32, 1);
  display.display();
  delay(10000);

  display.clearDisplay();
  display.setCursor(0,0);
  display.println(F(
    "matamu cantik!\n"
    "\"seperi sepasang\n"
    "burung merpati\"\n"
    "kamu asli mana?"));
  display.display();
  display.drawBitmap( 128-32, 0, merpati, 32, 32, 1);
  display.display();
  delay(10000);
  
  testanimate(32, 32);
}



void loop() {
}

  
#define XPOS      0
#define YPOS      1
#define DELTAY    2
#define NUMFLAKES 4

void testanimate(uint8_t w, uint8_t h) {
  
  int8_t f, icons[NUMFLAKES][3];
  
  for(f=0; f< NUMFLAKES; f++) {
    icons[f][XPOS]   = random(1 - LOGO_WIDTH, display.width());
    icons[f][YPOS]   = -LOGO_HEIGHT;
    icons[f][DELTAY] = random(1, 6);
  }

  for(;;) {
    display.clearDisplay();
    for(f=0; f< NUMFLAKES; f++) {
      //if(f % 2 == 0 )
      if(f == 1 )display.drawBitmap(icons[f][XPOS], icons[f][YPOS],logo_bmp2, w, h, SSD1306_WHITE);
      if(f == 0 )display.drawBitmap(icons[f][XPOS], icons[f][YPOS],logo_bmp3, w, h, SSD1306_WHITE);
      if(f == 2 )display.drawBitmap(icons[f][XPOS], icons[f][YPOS],kacamata, w, h, SSD1306_WHITE);
      if(f == 3 ) display.drawBitmap(icons[f][XPOS], icons[f][YPOS],merpati, w, h, SSD1306_WHITE);
    }
    display.display();
    delay(500);
    
    for(f=0; f< NUMFLAKES; f++) {
      icons[f][YPOS] += icons[f][DELTAY];      
      if (icons[f][YPOS] >= display.height()) {
        icons[f][XPOS]   = random(1 - LOGO_WIDTH, display.width());
        icons[f][YPOS]   = -LOGO_HEIGHT;
        icons[f][DELTAY] = random(1, 6);
      }
    }
        
  }
}
